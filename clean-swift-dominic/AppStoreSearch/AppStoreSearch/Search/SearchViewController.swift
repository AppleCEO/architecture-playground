//
//  SearchViewController.swift
//  AppStoreSearch
//
//  Created by 도미닉 on 6/21/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Then
import SnapKit

protocol SearchDisplayLogic: class
{
    func displaySomething(viewModel: Search.FetchAppInfos.ViewModel)
}

class SearchViewController: UIViewController, SearchDisplayLogic
{
    func displaySomething(viewModel: Search.FetchAppInfos.ViewModel) {
        print()
    }
    
    let searchView = SearchView()
    let tableView = UITableView()
    
    var interactor: SearchBusinessLogic?
    var router: (NSObjectProtocol & SearchRoutingLogic & SearchDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = SearchInteractor()
        let presenter = SearchPresenter()
        let router = SearchRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setAutolayout()
        setupTableView()
        interactor?.fetchAppInfos(request: Search.FetchAppInfos.Request())
    }
    
    private func setAutolayout() {
        setSearchView()
        setTableView()
    }
    
    private func setSearchView() {
        view.addSubview(searchView)
        searchView.snp.makeConstraints { make in
            make.horizontalEdges.equalToSuperview().inset(10)
            make.top.equalTo(view.safeAreaLayoutGuide).inset(10)
            make.height.equalTo(50)
        }
    }
    
    private func setupTableView() {
        view.backgroundColor = .black
        tableView.register(AppInfoTableViewCell.self, forCellReuseIdentifier: "AppInfoTableViewCell")
        tableView.delegate = self
        tableView.dataSource = self
        tableView.separatorInset = UIEdgeInsets(top: 0, left: 16, bottom: 0, right: 16)
        tableView.separatorColor = .lightGray
    }
    
    private func setTableView() {
        view.addSubview(tableView)
        tableView.snp.makeConstraints { make in
            make.horizontalEdges.equalToSuperview()
            make.top.equalTo(searchView.snp.bottom).offset(5)
            make.bottom.equalToSuperview()
        }
        tableView.backgroundColor = .black
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
}

extension SearchViewController: UITableViewDataSource, UITableViewDelegate {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        5
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "AppInfoTableViewCell", for: indexPath) as! AppInfoTableViewCell
        cell.configure()
        return cell
    }
}
