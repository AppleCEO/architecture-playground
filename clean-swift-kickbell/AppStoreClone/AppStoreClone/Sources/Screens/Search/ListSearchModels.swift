//
//  ListSearchModels.swift
//  AppStoreClone
//
//  Created by jc.kim on 6/25/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ListSearch
{
  // MARK: Use cases
  // 검색어 업데이트 유즈케이스
  enum UpdateSearchQuery
  {
    struct Request
    {
      let query: String
    }
    
    struct Response
    {
      let recentSearches: [String]
      let filteredRecentSearches: [String]
    }
    
    struct ViewModel
    {
      let recentSearchItems: [SearchDisplayItemDTO]
    }
  }
  
  // 검색 실행 유즈케이스
  enum PerformSearch
  {
    struct Request
    {
      let query: String
    }
    
    struct Response
    {
      let searchResults: [AppSearchResultDTO]
      let query: String
    }
    
    struct ViewModel
    {
      let searchResultItems: [SearchDisplayItemDTO]
      let query: String
    }
  }
  
  // Clean Swift 아키텍처에 맞는 DTO 모델들
  
  // 앱 검색 결과 DTO
  struct AppSearchResultDTO: Equatable {
      let screenshotImages: [String]
      let ipadScreenshotUrls: [String]
      let artworkUrl512: String
      let languageCodesISO2A: [String]
      let contentAdvisoryRating: String
      let trackContentRating: String
      let sellerName: String
      let trackName: String
      let currentVersionReleaseDate: String
      let releaseNotes: String
      let version: String
      let description: String
      let artistName: String
      let genres: [String]
      let averageUserRating: Double
      let userRatingCount: String
  }
  
  // 화면에 표시할 검색 항목 DTO
  struct SearchDisplayItemDTO: Equatable {
    enum ItemType: Equatable {
      case app(AppSearchResultDTO)
      case recent(String)
      
      var isRecent: Bool {
        if case .recent = self { return true }
        return false
      }
      
      var isApp: Bool {
        if case .app = self { return true }
        return false
      }
    }
    
    let type: ItemType
  }
}
